openapi: 3.0.1
info:
  title: Product Catalog Service
  description: "##  Product Catalog Service ###

    \ Product Catalog API goal is to manage a catalog of products offered by service provider.
     \n\n"
  version: 0.0.1
  contact:
    name: Kapil Gidwani
    email: kgidwani@protonmail.com
    url: https://flowkit.org
  x-api-id: 4315f0de-dedf-11ea-87d0-0242ac130003
  x-audience: external-partner
servers:
  - url: https://api.flowkit.org
    description: Production server
  - url: https://api.acc.flowkit.org
    description: Acceptance server
  - url: https://api.dev.flowkit.org
    description: Development server (uses test data)
tags:
  - name: Catalog
paths:
  /catalog:
    get:
      tags:
        - Catalog
      summary: Find Catalogs.
      description: This operation list or find Catalog entities
      operationId: findCatalogs
      parameters:
        - name: fields
          in: query
          description: Comma-separated properties to be provided in response
          schema:
            type: string
        - name: offset
          in: query
          description: Requested index for start of resources to be provided in response
          schema:
            type: integer
        - name: limit
          in: query
          description: Requested number of resources to be provided in response
          schema:
            type: integer
      responses:
        200:
          description: Success
          headers:
            X-Total-Count:
              description: Total number of items matching criteria
              schema:
                type: integer
            X-Result-Count:
              description: Actual number of items returned in the response body
              schema:
                type: integer
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        400:
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        401:
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        403:
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal Server Error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      tags:
        - Catalog
      summary: Creates a Catalog
      description: This operation creates a Catalog entity.
      operationId: createCatalog
      requestBody:
        description: The Catalog to be created
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CatalogCreate'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Catalog'
        400:
          description: Bad Request
          content:
            application/problem+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        401:
          description: Unauthorized
          content:
            application/problem+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        403:
          description: Forbidden
          content:
            application/problem+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'

        409:
          description: Conflict
          content:
            application/problem+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal Server Error
          content:
            application/problem+json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
      x-codegen-request-body-name: catalog
  /catalog/{id}:
    get:
      tags:
        - Catalog
      summary: Retrieves a Catalog by ID
      description: This operation retrieves a Catalog entity. Attribute selection
        is enabled for all first level attributes.
      operationId: findCatalog
      parameters:
        - name: id
          in: path
          description: Identifier of the Catalog
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: Comma-separated properties to provide in response
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Catalog'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
    delete:
      tags:
        - Catalog
      summary: Deletes a Catalog
      description: This operation deletes a Catalog entity.
      operationId: deleteCatalog
      parameters:
        - name: id
          in: path
          description: Identifier of the Catalog
          required: true
          schema:
            type: string
      responses:
        204:
          description: Deleted
          content: { }
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
    patch:
      tags:
        - Catalog
      summary: Updates partially a Catalog
      description: This operation updates partially a Catalog entity.
      operationId: patchCatalog
      parameters:
        - name: id
          in: path
          description: Identifier of the Catalog
          required: true
          schema:
            type: string
      requestBody:
        description: The Catalog to be updated
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CatalogUpdate'
        required: true
      responses:
        200:
          description: Updated
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Catalog'
        400:
          description: Bad Request
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        401:
          description: Unauthorized
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        403:
          description: Forbidden
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: Not Found
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        409:
          description: Conflict
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal Server Error
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Problem'
      x-codegen-request-body-name: catalog
components:
  schemas:
    Catalog:
      type: object
      description: A collection of Product Offerings, intended for a specific DistributionChannel,
        enhanced with additional information such as SLA parameters, invoicing and
        shipping details
      properties:
        id:
          type: string
          description: Unique identifier of the Catalog
        name:
          type: string
          description: Name of the catalog
        description:
          type: string
          description: Description of this catalog
        category:
          type: array
          description: List of root categories contained in this catalog
          items:
            $ref: '#/components/schemas/CategoryRef'
    CatalogCreate:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Name of the catalog
        description:
          type: string
          description: Description of this catalog
      description: |-
        A collection of Product Offerings, intended for a specific DistributionChannel, enhanced with additional information such as SLA parameters, invoicing and shipping details
    CatalogUpdate:
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: Name of the catalog
        description:
          type: string
          nullable: true
          description: Description of this catalog
      description: |-
        A collection of Product Offerings, intended for a specific DistributionChannel, enhanced with additional information such as SLA parameters, invoicing and shipping details
    CategoryRef:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of Category
      description: Category reference
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: 'about:blank'
          example: 'https://zalando.github.io/problem/constraint-violation'
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
